import copy
import random
# Consider using the modules imported above.

class Hat:
  def __init__(self, **kwargs):
    self.contents = []
    for k, v in kwargs.items():
      self.contents += v * [k]
    
  def draw(self, num):
    try:
      rand_balls = random.sample(self.contents, num)
    except:
      rand_balls = copy.deepcopy(self.contents)

    for rand_ball in rand_balls:
      self.contents.remove(rand_ball)

    return rand_balls
    
def experiment(hat, expected_balls, num_balls_drawn, num_experiments):
  M = 0
  for i in range(num_experiments):
    hat_copy = copy.deepcopy(hat)
    rand_balls = hat_copy.draw(num_balls_drawn)

    expected_list = []
    for k, v in expected_balls.items():
      expected_list += v * [k]
    
    if contains_balls(expected_list, rand_balls):
      M += 1
      
  probability = M/num_experiments
  return probability
  
def contains_balls(expected_balls, actual_balls):
  for b in expected_balls:
    if b in actual_balls:
      actual_balls.remove(b)
    else:
      return False
  return True
